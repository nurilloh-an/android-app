name: Android CI

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'  # Enables releases on tag pushes like v1.2.3
  pull_request:
    branches: [ main ]

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  ANDROID_HOME: /usr/local/lib/android/sdk

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: 'gradle'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build --stacktrace --no-daemon

      - name: Run tests
        run: ./gradlew test --stacktrace --no-daemon

      - name: Generate APK
        run: ./gradlew assembleDebug --stacktrace --no-daemon

      - name: Upload APK to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/*.apk
          retention-days: 7

      - name: Upload APK to Repository
        if: github.ref == 'refs/heads/main'
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          
          # Create a timestamp for the APK filename
          TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
          APK_NAME="app-debug-$TIMESTAMP.apk"
          
          # Rename the APK with timestamp
          mv app/build/outputs/apk/debug/app-debug.apk "$APK_NAME"
          
          # Create a directory for APKs if it doesn't exist
          mkdir -p apks
          
          # Move the APK to the apks directory
          mv "$APK_NAME" "apks/"
          
          # Add, commit and push the APK
          git add apks/
          git commit -m "[CI] Add new APK: $APK_NAME" || echo "No changes to commit"
          git push origin main

      - name: Upload mapping files
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: mapping-files
          path: app/build/outputs/mapping/
          retention-days: 7

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref_name, 'v')
    runs-on: ubuntu-latest

    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: app-debug
          path: release/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
