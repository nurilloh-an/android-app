name: Android CI

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'          # (optional) enables releases on tag pushes like v1.2.3
  pull_request:
    branches: [ main ]

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  ANDROID_HOME: /usr/local/lib/android/sdk
  # âœ… Remove the hard-coded JAVA_HOME to JDK 11
  # JAVA_HOME: /usr/lib/jvm/temurin-11-jdk-amd64

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build --stacktrace --no-daemon

      - name: Run tests
        run: ./gradlew test --stacktrace --no-daemon

      - name: Generate APK
        run: ./gradlew assembleDebug --stacktrace --no-daemon

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk
          retention-days: 7

      - name: Upload mapping files
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: mapping-files
          path: app/build/outputs/mapping/
          retention-days: 7

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref_name, 'v')   # works with tags like v1.0.0
    runs-on: ubuntu-latest

    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: app-debug
          path: release/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/app-debug.apk
          asset_name: app-debug.apk
          asset_content_type: application/vnd.android.package-archive
